//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.NodejsTools.Npm {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.NodejsTools.Npm.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot retrieve license from empty license collection..
        /// </summary>
        internal static string CannotRetrieveLicenseEmptyCollection {
            get {
                return ResourceManager.GetString("CannotRetrieveLicenseEmptyCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot retrieve license for index less than 0..
        /// </summary>
        internal static string CannotRetrieveLicenseInvalidIndex {
            get {
                return ResourceManager.GetString("CannotRetrieveLicenseInvalidIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database is corrupt - deleting {0}. Try refreshing the catalog again. Otherwise restart Visual Studio, and try again..
        /// </summary>
        internal static string DatabaseCorrupt {
            get {
                return ResourceManager.GetString("DatabaseCorrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download or parsing failed - deleting {0}. Try refreshing the catalog again. Otherwise restart Visual Studio, and try again..
        /// </summary>
        internal static string DownloadOrParsingFailed {
            get {
                return ResourceManager.GetString("DownloadOrParsingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error executing npm - unable to start the npm process.
        /// </summary>
        internal static string ErrCannotStartNpm {
            get {
                return ResourceManager.GetString("ErrCannotStartNpm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to retrieve npm catalog: the web service may be unavailable..
        /// </summary>
        internal static string ErrNpmCatalogEmpty {
            get {
                return ResourceManager.GetString("ErrNpmCatalogEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package catalog cache file is in use. Verify you are not refreshing the catalog in multiple instances..
        /// </summary>
        internal static string ErrorCatalogInUse {
            get {
                return ResourceManager.GetString("ErrorCatalogInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executing command &apos;npm {0}&apos;.
        /// </summary>
        internal static string ExecutingCommand {
            get {
                return ResourceManager.GetString("ExecutingCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not delete file {0} - try deleting it manually..
        /// </summary>
        internal static string FailedToDeleteFile {
            get {
                return ResourceManager.GetString("FailedToDeleteFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your package catalog database needs to be upgraded. Please wait while we execute a full refresh..
        /// </summary>
        internal static string InfoCatalogUpgrade {
            get {
                return ResourceManager.GetString("InfoCatalogUpgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Time: {0}.
        /// </summary>
        internal static string InfoCurrentTime {
            get {
                return ResourceManager.GetString("InfoCurrentTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deleting {0}.
        /// </summary>
        internal static string InfoDeletingFile {
            get {
                return ResourceManager.GetString("InfoDeletingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last Refreshed: {0}.
        /// </summary>
        internal static string InfoLastRefreshed {
            get {
                return ResourceManager.GetString("InfoLastRefreshed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path to npm: {0}.
        /// </summary>
        internal static string InfoNpmPathLocation {
            get {
                return ResourceManager.GetString("InfoNpmPathLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of Results: {0}.
        /// </summary>
        internal static string InfoNumberOfResults {
            get {
                return ResourceManager.GetString("InfoNumberOfResults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading package cache to {0}.
        /// </summary>
        internal static string InfoPackageCacheWriteLocation {
            get {
                return ResourceManager.GetString("InfoPackageCacheWriteLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading {0} bytes from {1} ({2}).
        /// </summary>
        internal static string InfoReadingBytesFromPackageCache {
            get {
                return ResourceManager.GetString("InfoReadingBytesFromPackageCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registry url: {0}.
        /// </summary>
        internal static string InfoRegistryUrl {
            get {
                return ResourceManager.GetString("InfoRegistryUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Semversion {0} for package {1} is invalid.
        /// </summary>
        internal static string InvalidPackageSemVersion {
            get {
                return ResourceManager.GetString("InvalidPackageSemVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to npm command cancelled.
        /// </summary>
        internal static string NpmCommandCancelled {
            get {
                return ResourceManager.GetString("NpmCommandCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to npm command completed with exit code {0}.
        /// </summary>
        internal static string NpmCommandCompletedWithExitCode {
            get {
                return ResourceManager.GetString("NpmCommandCompletedWithExitCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download complete - updating database.
        /// </summary>
        internal static string PackagesDownloadComplete {
            get {
                return ResourceManager.GetString("PackagesDownloadComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloaded {0}MB of the package list.
        /// </summary>
        internal static string PackagesDownloadedXMB {
            get {
                return ResourceManager.GetString("PackagesDownloadedXMB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloaded {0}MB of the package list ({1}MB total).
        /// </summary>
        internal static string PackagesDownloadedXOfYMB {
            get {
                return ResourceManager.GetString("PackagesDownloadedXOfYMB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading list of packages from {0}.
        /// </summary>
        internal static string PackagesDownloadStarting {
            get {
                return ResourceManager.GetString("PackagesDownloadStarting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parsing error (package {0}).
        /// </summary>
        internal static string ParsingError {
            get {
                return ResourceManager.GetString("ParsingError", resourceCulture);
            }
        }
    }
}
